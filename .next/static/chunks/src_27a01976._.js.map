{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/mockAnomaService.ts"],"sourcesContent":["// Mock Anoma Service for Skill Exchange Marketplace\n// This simulates blockchain functionality for development/testing\n\nexport interface MockWalletConnection {\n  address: string;\n  connected: boolean;\n  network: string;\n}\n\nexport interface MockIntent {\n  id: string;\n  userId: string;\n  intentType: 'teach' | 'learn';\n  skillName: string;\n  skillLevel: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  availability?: string;\n  location?: string;\n  description?: string;\n  status: 'active' | 'matched' | 'completed' | 'cancelled';\n  createdAt: string;\n}\n\nexport interface MockMatch {\n  id: string;\n  teacherIntentId: string;\n  learnerIntentId: string;\n  teacherUser: MockUser;\n  learnerUser: MockUser;\n  skill: string;\n  status: 'pending' | 'accepted' | 'rejected' | 'completed';\n  compatibilityScore: number;\n  matchReasons: string[];\n  createdAt: string;\n}\n\nexport interface MockUser {\n  id: string;\n  walletAddress: string;\n  username?: string;\n  email?: string;\n  bio?: string;\n  location?: string;\n  avatarUrl?: string;\n  privacySettings: {\n    showEmail: boolean;\n    showLocation: boolean;\n    showRealName: boolean;\n    showBio: boolean;\n    allowDirectMessages: boolean;\n  };\n}\n\nexport interface MockMessage {\n  id: string;\n  matchId: string;\n  senderId: string;\n  message: string;\n  encrypted: boolean;\n  timestamp: string;\n}\n\n// Mock data storage\nlet mockWallet: MockWalletConnection | null = null;\nlet mockCurrentUser: MockUser | null = null;\nlet mockIntents: MockIntent[] = [];\nlet mockMatches: MockMatch[] = [];\nlet mockMessages: MockMessage[] = [];\n\n// Dummy users for testing\nconst dummyUsers: MockUser[] = [\n  {\n    id: 'user1',\n    walletAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    username: 'alice_coder',\n    email: 'alice@example.com',\n    bio: 'Full-stack developer passionate about teaching React and Node.js',\n    location: 'San Francisco, CA',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  },\n  {\n    id: 'user2',\n    walletAddress: '0xabcdef1234567890abcdef1234567890abcdef12',\n    username: 'bob_learner',\n    email: 'bob@example.com',\n    bio: 'Eager to learn new programming skills and blockchain development',\n    location: 'New York, NY',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  },\n  {\n    id: 'user3',\n    walletAddress: '0x9876543210fedcba9876543210fedcba98765432',\n    username: 'carol_designer',\n    email: 'carol@example.com',\n    bio: 'UI/UX designer with 5 years experience in web and mobile design',\n    location: 'Austin, TX',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  },\n  {\n    id: 'user4',\n    walletAddress: '0xfedcba9876543210fedcba9876543210fedcba98',\n    username: 'david_blockchain',\n    email: 'david@example.com',\n    bio: 'Blockchain developer specializing in smart contracts and DeFi',\n    location: 'Remote',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  }\n];\n\n// Dummy intents for testing\nconst dummyIntents: MockIntent[] = [\n  {\n    id: 'intent1',\n    userId: 'user1',\n    intentType: 'teach',\n    skillName: 'React Development',\n    skillLevel: 'expert',\n    availability: 'Weekends, 2-4 PM PST',\n    location: 'Remote',\n    description: 'I can teach React fundamentals, hooks, state management, and advanced patterns',\n    status: 'active',\n    createdAt: new Date(Date.now() - 86400000).toISOString() // 1 day ago\n  },\n  {\n    id: 'intent2',\n    userId: 'user2',\n    intentType: 'learn',\n    skillName: 'React Development',\n    skillLevel: 'beginner',\n    availability: 'Weekends, flexible',\n    location: 'Remote',\n    description: 'Looking to learn React from scratch, including modern hooks and best practices',\n    status: 'active',\n    createdAt: new Date(Date.now() - 43200000).toISOString() // 12 hours ago\n  },\n  {\n    id: 'intent3',\n    userId: 'user3',\n    intentType: 'teach',\n    skillName: 'UI/UX Design',\n    skillLevel: 'advanced',\n    availability: 'Weekdays, 6-8 PM CST',\n    location: 'Remote or Austin, TX',\n    description: 'Teaching design principles, Figma, user research, and prototyping',\n    status: 'active',\n    createdAt: new Date(Date.now() - 172800000).toISOString() // 2 days ago\n  },\n  {\n    id: 'intent4',\n    userId: 'user4',\n    intentType: 'teach',\n    skillName: 'Blockchain Development',\n    skillLevel: 'expert',\n    availability: 'Evenings, 7-9 PM EST',\n    location: 'Remote',\n    description: 'Smart contract development, Solidity, Web3.js, and DeFi protocols',\n    status: 'active',\n    createdAt: new Date(Date.now() - 259200000).toISOString() // 3 days ago\n  },\n  {\n    id: 'intent5',\n    userId: 'user2',\n    intentType: 'learn',\n    skillName: 'Blockchain Development',\n    skillLevel: 'intermediate',\n    availability: 'Evenings, flexible',\n    location: 'Remote',\n    description: 'Want to learn smart contract development and understand DeFi better',\n    status: 'active',\n    createdAt: new Date(Date.now() - 21600000).toISOString() // 6 hours ago\n  }\n];\n\n// Initialize mock data\nmockIntents = [...dummyIntents];\n\n// Utility functions\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst generateId = () => Math.random().toString(36).substr(2, 9);\n\nconst generateWalletAddress = () => \n  '0x' + Array.from({length: 40}, () => Math.floor(Math.random() * 16).toString(16)).join('');\n\n// Mock Anoma Service Functions\n\nexport const mockAnomaService = {\n  // Wallet Connection\n  async connectWallet(): Promise<MockWalletConnection> {\n    await delay(1500); // Simulate network delay\n    \n    const mockAddress = generateWalletAddress();\n    mockWallet = {\n      address: mockAddress,\n      connected: true,\n      network: 'anoma-testnet'\n    };\n    \n    // Create or get user for this wallet\n    let user = dummyUsers.find(u => u.walletAddress === mockAddress);\n    if (!user) {\n      user = {\n        id: generateId(),\n        walletAddress: mockAddress,\n        username: `user_${mockAddress.slice(-6)}`,\n        privacySettings: {\n          showEmail: false,\n          showLocation: true,\n          showRealName: true,\n          showBio: true,\n          allowDirectMessages: true\n        }\n      };\n    }\n    mockCurrentUser = user;\n    \n    return mockWallet;\n  },\n\n  async disconnectWallet(): Promise<void> {\n    await delay(500);\n    mockWallet = null;\n    mockCurrentUser = null;\n  },\n\n  getWalletConnection(): MockWalletConnection | null {\n    return mockWallet;\n  },\n\n  getCurrentUser(): MockUser | null {\n    return mockCurrentUser;\n  },\n\n  // Intent Management\n  async postIntent(intentData: Omit<MockIntent, 'id' | 'userId' | 'status' | 'createdAt'>): Promise<MockIntent> {\n    await delay(1000);\n    \n    if (!mockCurrentUser) {\n      throw new Error('No wallet connected');\n    }\n\n    const newIntent: MockIntent = {\n      id: generateId(),\n      userId: mockCurrentUser.id,\n      status: 'active',\n      createdAt: new Date().toISOString(),\n      ...intentData\n    };\n\n    mockIntents.push(newIntent);\n    return newIntent;\n  },\n\n  async getIntents(filters?: {\n    intentType?: 'teach' | 'learn';\n    skillName?: string;\n    userId?: string;\n  }): Promise<MockIntent[]> {\n    await delay(800);\n    \n    let filteredIntents = [...mockIntents];\n    \n    if (filters?.intentType) {\n      filteredIntents = filteredIntents.filter(intent => intent.intentType === filters.intentType);\n    }\n    \n    if (filters?.skillName) {\n      filteredIntents = filteredIntents.filter(intent => \n        intent.skillName.toLowerCase().includes(filters.skillName!.toLowerCase())\n      );\n    }\n    \n    if (filters?.userId) {\n      filteredIntents = filteredIntents.filter(intent => intent.userId === filters.userId);\n    }\n    \n    return filteredIntents.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  },\n\n  // Intent Matching\n  async findMatches(intentId: string): Promise<MockMatch[]> {\n    await delay(1200);\n    \n    const sourceIntent = mockIntents.find(intent => intent.id === intentId);\n    if (!sourceIntent) {\n      throw new Error('Intent not found');\n    }\n\n    const complementaryType = sourceIntent.intentType === 'teach' ? 'learn' : 'teach';\n    const potentialMatches = mockIntents.filter(intent => \n      intent.intentType === complementaryType &&\n      intent.userId !== sourceIntent.userId &&\n      intent.status === 'active' &&\n      intent.skillName.toLowerCase().includes(sourceIntent.skillName.toLowerCase())\n    );\n\n    const matches: MockMatch[] = potentialMatches.map(intent => {\n      const user = dummyUsers.find(u => u.id === intent.userId) || dummyUsers[0];\n      const compatibilityScore = calculateCompatibilityScore(sourceIntent, intent);\n      \n      return {\n        id: generateId(),\n        teacherIntentId: sourceIntent.intentType === 'teach' ? sourceIntent.id : intent.id,\n        learnerIntentId: sourceIntent.intentType === 'learn' ? sourceIntent.id : intent.id,\n        teacherUser: sourceIntent.intentType === 'teach' ? mockCurrentUser! : user,\n        learnerUser: sourceIntent.intentType === 'learn' ? mockCurrentUser! : user,\n        skill: sourceIntent.skillName,\n        status: 'pending',\n        compatibilityScore,\n        matchReasons: generateMatchReasons(sourceIntent, intent, compatibilityScore),\n        createdAt: new Date().toISOString()\n      };\n    });\n\n    return matches.sort((a, b) => b.compatibilityScore - a.compatibilityScore);\n  },\n\n  // Match Management\n  async createMatch(teacherIntentId: string, learnerIntentId: string): Promise<MockMatch> {\n    await delay(1000);\n    \n    const teacherIntent = mockIntents.find(i => i.id === teacherIntentId);\n    const learnerIntent = mockIntents.find(i => i.id === learnerIntentId);\n    \n    if (!teacherIntent || !learnerIntent) {\n      throw new Error('Intent not found');\n    }\n\n    const teacherUser = dummyUsers.find(u => u.id === teacherIntent.userId) || dummyUsers[0];\n    const learnerUser = dummyUsers.find(u => u.id === learnerIntent.userId) || dummyUsers[1];\n\n    const match: MockMatch = {\n      id: generateId(),\n      teacherIntentId,\n      learnerIntentId,\n      teacherUser,\n      learnerUser,\n      skill: teacherIntent.skillName,\n      status: 'accepted',\n      compatibilityScore: calculateCompatibilityScore(teacherIntent, learnerIntent),\n      matchReasons: generateMatchReasons(teacherIntent, learnerIntent, 85),\n      createdAt: new Date().toISOString()\n    };\n\n    mockMatches.push(match);\n    \n    // Update intent statuses\n    teacherIntent.status = 'matched';\n    learnerIntent.status = 'matched';\n\n    return match;\n  },\n\n  async getMatches(userId?: string): Promise<MockMatch[]> {\n    await delay(600);\n    \n    let userMatches = [...mockMatches];\n    \n    if (userId) {\n      userMatches = userMatches.filter(match => \n        match.teacherUser.id === userId || match.learnerUser.id === userId\n      );\n    }\n    \n    return userMatches.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  },\n\n  // Messaging\n  async sendMessage(matchId: string, message: string, encrypted: boolean = false): Promise<MockMessage> {\n    await delay(500);\n    \n    if (!mockCurrentUser) {\n      throw new Error('No wallet connected');\n    }\n\n    const newMessage: MockMessage = {\n      id: generateId(),\n      matchId,\n      senderId: mockCurrentUser.id,\n      message: encrypted ? btoa(message) : message, // Simple base64 \"encryption\"\n      encrypted,\n      timestamp: new Date().toISOString()\n    };\n\n    mockMessages.push(newMessage);\n    return newMessage;\n  },\n\n  async getMessages(matchId: string): Promise<MockMessage[]> {\n    await delay(400);\n    \n    return mockMessages\n      .filter(msg => msg.matchId === matchId)\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n  },\n\n  // Privacy Settings\n  async updatePrivacySettings(settings: Partial<MockUser['privacySettings']>): Promise<MockUser> {\n    await delay(600);\n    \n    if (!mockCurrentUser) {\n      throw new Error('No wallet connected');\n    }\n\n    mockCurrentUser.privacySettings = {\n      ...mockCurrentUser.privacySettings,\n      ...settings\n    };\n\n    return mockCurrentUser;\n  },\n\n  // Utility functions\n  async simulateNetworkDelay(ms: number = 1000): Promise<void> {\n    await delay(ms);\n  }\n};\n\n// Helper functions\nfunction calculateCompatibilityScore(intent1: MockIntent, intent2: MockIntent): number {\n  let score = 0;\n  \n  // Skill name match\n  if (intent1.skillName.toLowerCase() === intent2.skillName.toLowerCase()) {\n    score += 50;\n  } else if (intent1.skillName.toLowerCase().includes(intent2.skillName.toLowerCase()) ||\n             intent2.skillName.toLowerCase().includes(intent1.skillName.toLowerCase())) {\n    score += 30;\n  }\n  \n  // Skill level compatibility\n  const levels = ['beginner', 'intermediate', 'advanced', 'expert'];\n  const level1Index = levels.indexOf(intent1.skillLevel);\n  const level2Index = levels.indexOf(intent2.skillLevel);\n  \n  if (Math.abs(level1Index - level2Index) <= 1) {\n    score += 25;\n  } else if (Math.abs(level1Index - level2Index) <= 2) {\n    score += 15;\n  }\n  \n  // Location compatibility\n  if (intent1.location && intent2.location) {\n    if (intent1.location.toLowerCase() === intent2.location.toLowerCase()) {\n      score += 15;\n    } else if (intent1.location.toLowerCase().includes('remote') || \n               intent2.location.toLowerCase().includes('remote')) {\n      score += 10;\n    }\n  }\n  \n  // Random factor for variety\n  score += Math.floor(Math.random() * 10);\n  \n  return Math.min(score, 100);\n}\n\nfunction generateMatchReasons(intent1: MockIntent, intent2: MockIntent, score: number): string[] {\n  const reasons: string[] = [];\n  \n  if (intent1.skillName.toLowerCase() === intent2.skillName.toLowerCase()) {\n    reasons.push('Exact skill match');\n  } else {\n    reasons.push('Related skill match');\n  }\n  \n  if (intent1.location?.toLowerCase().includes('remote') || \n      intent2.location?.toLowerCase().includes('remote')) {\n    reasons.push('Remote availability');\n  }\n  \n  if (score > 80) {\n    reasons.push('High compatibility score');\n  } else if (score > 60) {\n    reasons.push('Good compatibility score');\n  }\n  \n  const levels = ['beginner', 'intermediate', 'advanced', 'expert'];\n  const level1Index = levels.indexOf(intent1.skillLevel);\n  const level2Index = levels.indexOf(intent2.skillLevel);\n  \n  if (Math.abs(level1Index - level2Index) <= 1) {\n    reasons.push('Compatible skill levels');\n  }\n  \n  return reasons;\n}\n\nexport default mockAnomaService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/IntentMatches.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { mockAnomaService, MockMatch, MockIntent } from '@/lib/mockAnomaService';\n\ninterface IntentMatchesProps {\n  intentId?: string;\n  onMatchSelect?: (match: MockMatch) => void;\n}\n\nexport default function IntentMatches({ intentId, onMatchSelect }: IntentMatchesProps) {\n  const [matches, setMatches] = useState<MockMatch[]>([]);\n  const [userIntents, setUserIntents] = useState<MockIntent[]>([]);\n  const [selectedIntentId, setSelectedIntentId] = useState<string>(intentId || '');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUser = mockAnomaService.getCurrentUser();\n\n  useEffect(() => {\n    if (currentUser) {\n      loadUserIntents();\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (selectedIntentId) {\n      findMatches(selectedIntentId);\n    }\n  }, [selectedIntentId]);\n\n  const loadUserIntents = async () => {\n    if (!currentUser) return;\n\n    try {\n      const intents = await mockAnomaService.getIntents({ userId: currentUser.id });\n      setUserIntents(intents.filter(intent => intent.status === 'active'));\n      \n      // Auto-select first intent if none selected\n      if (!selectedIntentId && intents.length > 0) {\n        setSelectedIntentId(intents[0].id);\n      }\n    } catch (err) {\n      setError('Failed to load your intents');\n    }\n  };\n\n  const findMatches = async (intentId: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const foundMatches = await mockAnomaService.findMatches(intentId);\n      setMatches(foundMatches);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to find matches');\n      setMatches([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCreateMatch = async (match: MockMatch) => {\n    try {\n      const createdMatch = await mockAnomaService.createMatch(\n        match.teacherIntentId,\n        match.learnerIntentId\n      );\n      onMatchSelect?.(createdMatch);\n      \n      // Refresh matches\n      if (selectedIntentId) {\n        findMatches(selectedIntentId);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to create match');\n    }\n  };\n\n  if (!currentUser) {\n    return (\n      <Card className=\"mystical-card\">\n        <CardContent className=\"pt-6 text-center\">\n          <div className=\"text-4xl mb-4\">🔒</div>\n          <h3 className=\"text-xl font-bold text-theme-white mb-2\">Wallet Not Connected</h3>\n          <p className=\"text-gray-300 mb-4\">\n            Please connect your Anoma wallet to view matches.\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (userIntents.length === 0) {\n    return (\n      <Card className=\"mystical-card\">\n        <CardContent className=\"pt-6 text-center\">\n          <div className=\"text-4xl mb-4\">📝</div>\n          <h3 className=\"text-xl font-bold text-theme-white mb-2\">No Active Intents</h3>\n          <p className=\"text-gray-300 mb-4\">\n            You need to post an intent before you can find matches.\n          </p>\n          <Button className=\"btn-primary\">\n            Post Your First Intent\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Intent Selector */}\n      <Card className=\"mystical-card\">\n        <CardHeader>\n          <CardTitle className=\"text-theme-white\">Your Active Intents</CardTitle>\n          <CardDescription className=\"text-gray-300\">\n            Select an intent to find compatible matches\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-3\">\n            {userIntents.map((intent) => (\n              <div\n                key={intent.id}\n                className={`p-4 rounded-lg border cursor-pointer transition-all ${\n                  selectedIntentId === intent.id\n                    ? 'border-theme-red bg-theme-red/10 glow-red'\n                    : 'border-theme-white/20 hover:border-theme-white/40'\n                }`}\n                onClick={() => setSelectedIntentId(intent.id)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <Badge className={\n                        intent.intentType === 'teach' \n                          ? 'bg-theme-green/20 text-theme-green' \n                          : 'bg-theme-red/20 text-theme-red'\n                      }>\n                        {intent.intentType === 'teach' ? 'Teaching' : 'Learning'}\n                      </Badge>\n                      <span className=\"text-theme-white font-medium\">{intent.skillName}</span>\n                    </div>\n                    <div className=\"text-sm text-gray-300\">\n                      Level: {intent.skillLevel} • {intent.location || 'Location not specified'}\n                    </div>\n                  </div>\n                  {selectedIntentId === intent.id && (\n                    <div className=\"w-3 h-3 bg-theme-red rounded-full animate-pulse\"></div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Error Display */}\n      {error && (\n        <Alert className=\"border-theme-red bg-theme-red/10\">\n          <AlertDescription className=\"text-theme-red\">\n            {error}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Matches Display */}\n      {selectedIntentId && (\n        <Card className=\"mystical-card\">\n          <CardHeader>\n            <CardTitle className=\"text-theme-white flex items-center gap-2\">\n              🎯 Compatible Matches\n              {isLoading && (\n                <div className=\"w-4 h-4 border-2 border-theme-white border-t-transparent rounded-full animate-spin\"></div>\n              )}\n            </CardTitle>\n            <CardDescription className=\"text-gray-300\">\n              Found {matches.length} compatible {matches.length === 1 ? 'match' : 'matches'} for your intent\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {isLoading ? (\n              <div className=\"space-y-4\">\n                {[1, 2, 3].map((i) => (\n                  <div key={i} className=\"animate-pulse\">\n                    <div className=\"h-32 bg-theme-black/50 rounded-lg\"></div>\n                  </div>\n                ))}\n              </div>\n            ) : matches.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <div className=\"text-4xl mb-4\">🔍</div>\n                <h3 className=\"text-lg font-semibold text-theme-white mb-2\">No Matches Found</h3>\n                <p className=\"text-gray-300 mb-4\">\n                  No compatible matches found for this intent yet. Try adjusting your preferences or check back later.\n                </p>\n                <Button \n                  onClick={() => selectedIntentId && findMatches(selectedIntentId)}\n                  className=\"btn-secondary\"\n                >\n                  Refresh Matches\n                </Button>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {matches.map((match) => {\n                  const otherUser = match.teacherUser.id === currentUser?.id ? match.learnerUser : match.teacherUser;\n                  const isTeaching = match.teacherUser.id === currentUser?.id;\n                  \n                  return (\n                    <div key={match.id} className=\"mystical-card border border-theme-white/20 hover-glow-green\">\n                      <div className=\"p-6\">\n                        <div className=\"flex items-start justify-between mb-4\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-2\">\n                              <div className=\"w-10 h-10 bg-gradient-red-green rounded-full flex items-center justify-center text-white font-bold\">\n                                {otherUser.username?.charAt(0).toUpperCase() || 'U'}\n                              </div>\n                              <div>\n                                <h3 className=\"font-semibold text-theme-white\">\n                                  {otherUser.username || 'Anonymous User'}\n                                </h3>\n                                <p className=\"text-sm text-gray-300\">\n                                  {isTeaching ? 'Wants to learn' : 'Can teach'} {match.skill}\n                                </p>\n                              </div>\n                            </div>\n                            \n                            {otherUser.bio && (\n                              <p className=\"text-sm text-gray-300 mb-3\">{otherUser.bio}</p>\n                            )}\n                            \n                            <div className=\"flex items-center gap-4 text-sm text-gray-300 mb-3\">\n                              {otherUser.location && (\n                                <span>📍 {otherUser.location}</span>\n                              )}\n                            </div>\n                          </div>\n                          \n                          <div className=\"text-right\">\n                            <div className=\"text-2xl font-bold text-theme-green mb-1\">\n                              {match.compatibilityScore}%\n                            </div>\n                            <div className=\"text-xs text-gray-400\">Compatibility</div>\n                          </div>\n                        </div>\n                        \n                        {/* Match Reasons */}\n                        <div className=\"mb-4\">\n                          <div className=\"text-sm text-gray-400 mb-2\">Why this is a good match:</div>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {match.matchReasons.map((reason, index) => (\n                              <Badge key={index} className=\"bg-theme-white/10 text-theme-white text-xs\">\n                                {reason}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                        \n                        {/* Actions */}\n                        <div className=\"flex gap-3\">\n                          <Button\n                            onClick={() => handleCreateMatch(match)}\n                            className=\"btn-primary flex-1\"\n                          >\n                            Start Conversation\n                          </Button>\n                          <Button className=\"btn-outline\">\n                            View Profile\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/matches/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport IntentMatches from '@/components/IntentMatches';\nimport { MockMatch } from '@/lib/mockAnomaService';\n\nexport default function MatchesPage() {\n  const [selectedMatch, setSelectedMatch] = useState<MockMatch | null>(null);\n\n  const handleMatchSelect = (match: MockMatch) => {\n    setSelectedMatch(match);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-theme-black text-theme-white\">\n      {/* Navigation */}\n      <nav className=\"border-b border-theme-white/10 bg-theme-black/95 backdrop-blur-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\" className=\"flex items-center\">\n              <h1 className=\"text-2xl font-bold text-gradient-red-green\">\n                Anoma Skills\n              </h1>\n            </Link>\n            <div className=\"hidden md:block\">\n              <div className=\"ml-10 flex items-baseline space-x-4\">\n                <Link href=\"/\" className=\"nav-link\">\n                  Home\n                </Link>\n                <Link href=\"/onboarding\" className=\"nav-link\">\n                  Get Started\n                </Link>\n                <Link href=\"/post-intent\" className=\"nav-link\">\n                  Post Intent\n                </Link>\n                <Link href=\"/chat\" className=\"nav-link\">\n                  Messages\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Header */}\n        <div className=\"text-center mb-12 animate-fade-in\">\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-6\">\n            <span className=\"text-gradient-red-white\">Find Your</span>\n            <br />\n            <span className=\"text-gradient-green-white\">Perfect Match</span>\n          </h1>\n          <p className=\"text-xl text-gray-300 max-w-2xl mx-auto\">\n            Discover compatible learning partners based on your intents. \n            Our AI-powered system finds the best matches for skill exchange.\n          </p>\n        </div>\n\n        {/* Success Message */}\n        {selectedMatch && (\n          <div className=\"mb-8 animate-scale-in\">\n            <Card className=\"mystical-card border-theme-green\">\n              <CardHeader>\n                <CardTitle className=\"text-theme-green flex items-center gap-2\">\n                  <span className=\"text-2xl\">🎉</span>\n                  Match Created Successfully!\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-gray-300 mb-4\">\n                  You've successfully connected with a learning partner for \"{selectedMatch.skill}\". \n                  You can now start chatting and coordinate your skill exchange.\n                </p>\n                <div className=\"flex gap-3\">\n                  <Link href=\"/chat\">\n                    <Button className=\"btn-primary\">\n                      Start Chatting\n                    </Button>\n                  </Link>\n                  <Button \n                    onClick={() => setSelectedMatch(null)}\n                    className=\"btn-outline\"\n                  >\n                    Find More Matches\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Main Content */}\n        <div className=\"grid lg:grid-cols-4 gap-8\">\n          {/* Matches */}\n          <div className=\"lg:col-span-3 animate-slide-up\">\n            <IntentMatches onMatchSelect={handleMatchSelect} />\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6 animate-slide-up delay-200\">\n            {/* Matching Stats */}\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <CardTitle className=\"text-theme-white\">📊 Your Stats</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-300\">Active Intents</span>\n                  <span className=\"text-theme-green font-bold\">3</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-300\">Total Matches</span>\n                  <span className=\"text-theme-red font-bold\">12</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-300\">Conversations</span>\n                  <span className=\"text-theme-white font-bold\">5</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-300\">Completed</span>\n                  <span className=\"text-theme-green font-bold\">2</span>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Quick Actions */}\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <CardTitle className=\"text-theme-white\">⚡ Quick Actions</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <Link href=\"/post-intent\">\n                  <Button className=\"btn-primary w-full\">\n                    Post New Intent\n                  </Button>\n                </Link>\n                <Link href=\"/chat\">\n                  <Button className=\"btn-secondary w-full\">\n                    View Messages\n                  </Button>\n                </Link>\n                <Link href=\"/feedback\">\n                  <Button className=\"btn-outline w-full\">\n                    Leave Feedback\n                  </Button>\n                </Link>\n              </CardContent>\n            </Card>\n\n            {/* Matching Tips */}\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <CardTitle className=\"text-theme-white\">💡 Matching Tips</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 text-sm text-gray-300\">\n                <div className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-theme-red rounded-full mt-2 flex-shrink-0\"></div>\n                  <div>\n                    <strong className=\"text-theme-white\">Higher compatibility scores</strong> mean \n                    better alignment in skills, availability, and preferences.\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-theme-green rounded-full mt-2 flex-shrink-0\"></div>\n                  <div>\n                    <strong className=\"text-theme-white\">Location matching</strong> considers both \n                    physical proximity and remote availability.\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-2\">\n                  <div className=\"w-2 h-2 bg-theme-white rounded-full mt-2 flex-shrink-0\"></div>\n                  <div>\n                    <strong className=\"text-theme-white\">Skill level gaps</strong> are optimized \n                    for effective teaching and learning experiences.\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Platform Activity */}\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <CardTitle className=\"text-theme-white\">🌐 Platform Activity</CardTitle>\n                <CardDescription className=\"text-gray-300\">\n                  Live stats from the network\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span className=\"text-gray-300\">Online Users</span>\n                  <span className=\"text-theme-green font-bold\">247</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span className=\"text-gray-300\">Active Intents</span>\n                  <span className=\"text-theme-red font-bold\">1,432</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span className=\"text-gray-300\">Matches Today</span>\n                  <span className=\"text-theme-white font-bold\">89</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span className=\"text-gray-300\">Skills Available</span>\n                  <span className=\"text-theme-green font-bold\">156</span>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Privacy Reminder */}\n            <Card className=\"mystical-card border-theme-white/20\">\n              <CardContent className=\"pt-6\">\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"text-2xl\">🔒</div>\n                  <div className=\"text-sm text-gray-300\">\n                    <strong className=\"text-theme-white\">Privacy Protected:</strong> Your matches \n                    are based on compatibility algorithms while respecting your privacy settings. \n                    Personal information is only shared with your consent.\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* How Matching Works */}\n        <div className=\"mt-16 animate-fade-in\">\n          <h2 className=\"text-3xl font-bold text-center mb-12 text-gradient-red-green\">\n            How Our Matching Algorithm Works\n          </h2>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-theme-red rounded-lg flex items-center justify-center mb-4 glow-red\">\n                  <span className=\"text-2xl\">🧠</span>\n                </div>\n                <CardTitle className=\"text-theme-white\">Intent Analysis</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"text-gray-300\">\n                  Our AI analyzes your intent details, skill requirements, availability, \n                  and learning preferences to understand what you're looking for.\n                </CardDescription>\n              </CardContent>\n            </Card>\n\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-theme-green rounded-lg flex items-center justify-center mb-4 glow-green\">\n                  <span className=\"text-2xl\">⚖️</span>\n                </div>\n                <CardTitle className=\"text-theme-white\">Compatibility Scoring</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"text-gray-300\">\n                  We calculate compatibility scores based on skill alignment, experience levels, \n                  scheduling compatibility, and communication preferences.\n                </CardDescription>\n              </CardContent>\n            </Card>\n\n            <Card className=\"mystical-card\">\n              <CardHeader>\n                <div className=\"w-12 h-12 bg-theme-white rounded-lg flex items-center justify-center mb-4 glow-white\">\n                  <span className=\"text-2xl text-theme-black\">🎯</span>\n                </div>\n                <CardTitle className=\"text-theme-white\">Smart Recommendations</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"text-gray-300\">\n                  The system presents you with the highest-scoring matches first, \n                  along with detailed reasons why each match could be successful.\n                </CardDescription>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}