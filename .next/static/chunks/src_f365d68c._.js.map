{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/mockAnomaService.ts"],"sourcesContent":["// Mock Anoma Service for Skill Exchange Marketplace\n// This simulates blockchain functionality for development/testing\n\nexport interface MockWalletConnection {\n  address: string;\n  connected: boolean;\n  network: string;\n}\n\nexport interface MockIntent {\n  id: string;\n  userId: string;\n  intentType: 'teach' | 'learn';\n  skillName: string;\n  skillLevel: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  availability?: string;\n  location?: string;\n  description?: string;\n  status: 'active' | 'matched' | 'completed' | 'cancelled';\n  createdAt: string;\n}\n\nexport interface MockMatch {\n  id: string;\n  teacherIntentId: string;\n  learnerIntentId: string;\n  teacherUser: MockUser;\n  learnerUser: MockUser;\n  skill: string;\n  status: 'pending' | 'accepted' | 'rejected' | 'completed';\n  compatibilityScore: number;\n  matchReasons: string[];\n  createdAt: string;\n}\n\nexport interface MockUser {\n  id: string;\n  walletAddress: string;\n  username?: string;\n  email?: string;\n  bio?: string;\n  location?: string;\n  avatarUrl?: string;\n  privacySettings: {\n    showEmail: boolean;\n    showLocation: boolean;\n    showRealName: boolean;\n    showBio: boolean;\n    allowDirectMessages: boolean;\n  };\n}\n\nexport interface MockMessage {\n  id: string;\n  matchId: string;\n  senderId: string;\n  message: string;\n  encrypted: boolean;\n  timestamp: string;\n}\n\n// Mock data storage\nlet mockWallet: MockWalletConnection | null = null;\nlet mockCurrentUser: MockUser | null = null;\nlet mockIntents: MockIntent[] = [];\nlet mockMatches: MockMatch[] = [];\nlet mockMessages: MockMessage[] = [];\n\n// Dummy users for testing\nconst dummyUsers: MockUser[] = [\n  {\n    id: 'user1',\n    walletAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    username: 'alice_coder',\n    email: 'alice@example.com',\n    bio: 'Full-stack developer passionate about teaching React and Node.js',\n    location: 'San Francisco, CA',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  },\n  {\n    id: 'user2',\n    walletAddress: '0xabcdef1234567890abcdef1234567890abcdef12',\n    username: 'bob_learner',\n    email: 'bob@example.com',\n    bio: 'Eager to learn new programming skills and blockchain development',\n    location: 'New York, NY',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  },\n  {\n    id: 'user3',\n    walletAddress: '0x9876543210fedcba9876543210fedcba98765432',\n    username: 'carol_designer',\n    email: 'carol@example.com',\n    bio: 'UI/UX designer with 5 years experience in web and mobile design',\n    location: 'Austin, TX',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  },\n  {\n    id: 'user4',\n    walletAddress: '0xfedcba9876543210fedcba9876543210fedcba98',\n    username: 'david_blockchain',\n    email: 'david@example.com',\n    bio: 'Blockchain developer specializing in smart contracts and DeFi',\n    location: 'Remote',\n    privacySettings: {\n      showEmail: false,\n      showLocation: true,\n      showRealName: true,\n      showBio: true,\n      allowDirectMessages: true\n    }\n  }\n];\n\n// Dummy intents for testing\nconst dummyIntents: MockIntent[] = [\n  {\n    id: 'intent1',\n    userId: 'user1',\n    intentType: 'teach',\n    skillName: 'React Development',\n    skillLevel: 'expert',\n    availability: 'Weekends, 2-4 PM PST',\n    location: 'Remote',\n    description: 'I can teach React fundamentals, hooks, state management, and advanced patterns',\n    status: 'active',\n    createdAt: new Date(Date.now() - 86400000).toISOString() // 1 day ago\n  },\n  {\n    id: 'intent2',\n    userId: 'user2',\n    intentType: 'learn',\n    skillName: 'React Development',\n    skillLevel: 'beginner',\n    availability: 'Weekends, flexible',\n    location: 'Remote',\n    description: 'Looking to learn React from scratch, including modern hooks and best practices',\n    status: 'active',\n    createdAt: new Date(Date.now() - 43200000).toISOString() // 12 hours ago\n  },\n  {\n    id: 'intent3',\n    userId: 'user3',\n    intentType: 'teach',\n    skillName: 'UI/UX Design',\n    skillLevel: 'advanced',\n    availability: 'Weekdays, 6-8 PM CST',\n    location: 'Remote or Austin, TX',\n    description: 'Teaching design principles, Figma, user research, and prototyping',\n    status: 'active',\n    createdAt: new Date(Date.now() - 172800000).toISOString() // 2 days ago\n  },\n  {\n    id: 'intent4',\n    userId: 'user4',\n    intentType: 'teach',\n    skillName: 'Blockchain Development',\n    skillLevel: 'expert',\n    availability: 'Evenings, 7-9 PM EST',\n    location: 'Remote',\n    description: 'Smart contract development, Solidity, Web3.js, and DeFi protocols',\n    status: 'active',\n    createdAt: new Date(Date.now() - 259200000).toISOString() // 3 days ago\n  },\n  {\n    id: 'intent5',\n    userId: 'user2',\n    intentType: 'learn',\n    skillName: 'Blockchain Development',\n    skillLevel: 'intermediate',\n    availability: 'Evenings, flexible',\n    location: 'Remote',\n    description: 'Want to learn smart contract development and understand DeFi better',\n    status: 'active',\n    createdAt: new Date(Date.now() - 21600000).toISOString() // 6 hours ago\n  }\n];\n\n// Initialize mock data\nmockIntents = [...dummyIntents];\n\n// Utility functions\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst generateId = () => Math.random().toString(36).substr(2, 9);\n\nconst generateWalletAddress = () => \n  '0x' + Array.from({length: 40}, () => Math.floor(Math.random() * 16).toString(16)).join('');\n\n// Mock Anoma Service Functions\n\nexport const mockAnomaService = {\n  // Wallet Connection\n  async connectWallet(): Promise<MockWalletConnection> {\n    await delay(1500); // Simulate network delay\n    \n    const mockAddress = generateWalletAddress();\n    mockWallet = {\n      address: mockAddress,\n      connected: true,\n      network: 'anoma-testnet'\n    };\n    \n    // Create or get user for this wallet\n    let user = dummyUsers.find(u => u.walletAddress === mockAddress);\n    if (!user) {\n      user = {\n        id: generateId(),\n        walletAddress: mockAddress,\n        username: `user_${mockAddress.slice(-6)}`,\n        privacySettings: {\n          showEmail: false,\n          showLocation: true,\n          showRealName: true,\n          showBio: true,\n          allowDirectMessages: true\n        }\n      };\n    }\n    mockCurrentUser = user;\n    \n    return mockWallet;\n  },\n\n  async disconnectWallet(): Promise<void> {\n    await delay(500);\n    mockWallet = null;\n    mockCurrentUser = null;\n  },\n\n  getWalletConnection(): MockWalletConnection | null {\n    return mockWallet;\n  },\n\n  getCurrentUser(): MockUser | null {\n    return mockCurrentUser;\n  },\n\n  // Intent Management\n  async postIntent(intentData: Omit<MockIntent, 'id' | 'userId' | 'status' | 'createdAt'>): Promise<MockIntent> {\n    await delay(1000);\n    \n    if (!mockCurrentUser) {\n      throw new Error('No wallet connected');\n    }\n\n    const newIntent: MockIntent = {\n      id: generateId(),\n      userId: mockCurrentUser.id,\n      status: 'active',\n      createdAt: new Date().toISOString(),\n      ...intentData\n    };\n\n    mockIntents.push(newIntent);\n    return newIntent;\n  },\n\n  async getIntents(filters?: {\n    intentType?: 'teach' | 'learn';\n    skillName?: string;\n    userId?: string;\n  }): Promise<MockIntent[]> {\n    await delay(800);\n    \n    let filteredIntents = [...mockIntents];\n    \n    if (filters?.intentType) {\n      filteredIntents = filteredIntents.filter(intent => intent.intentType === filters.intentType);\n    }\n    \n    if (filters?.skillName) {\n      filteredIntents = filteredIntents.filter(intent => \n        intent.skillName.toLowerCase().includes(filters.skillName!.toLowerCase())\n      );\n    }\n    \n    if (filters?.userId) {\n      filteredIntents = filteredIntents.filter(intent => intent.userId === filters.userId);\n    }\n    \n    return filteredIntents.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  },\n\n  // Intent Matching\n  async findMatches(intentId: string): Promise<MockMatch[]> {\n    await delay(1200);\n    \n    const sourceIntent = mockIntents.find(intent => intent.id === intentId);\n    if (!sourceIntent) {\n      throw new Error('Intent not found');\n    }\n\n    const complementaryType = sourceIntent.intentType === 'teach' ? 'learn' : 'teach';\n    const potentialMatches = mockIntents.filter(intent => \n      intent.intentType === complementaryType &&\n      intent.userId !== sourceIntent.userId &&\n      intent.status === 'active' &&\n      intent.skillName.toLowerCase().includes(sourceIntent.skillName.toLowerCase())\n    );\n\n    const matches: MockMatch[] = potentialMatches.map(intent => {\n      const user = dummyUsers.find(u => u.id === intent.userId) || dummyUsers[0];\n      const compatibilityScore = calculateCompatibilityScore(sourceIntent, intent);\n      \n      return {\n        id: generateId(),\n        teacherIntentId: sourceIntent.intentType === 'teach' ? sourceIntent.id : intent.id,\n        learnerIntentId: sourceIntent.intentType === 'learn' ? sourceIntent.id : intent.id,\n        teacherUser: sourceIntent.intentType === 'teach' ? mockCurrentUser! : user,\n        learnerUser: sourceIntent.intentType === 'learn' ? mockCurrentUser! : user,\n        skill: sourceIntent.skillName,\n        status: 'pending',\n        compatibilityScore,\n        matchReasons: generateMatchReasons(sourceIntent, intent, compatibilityScore),\n        createdAt: new Date().toISOString()\n      };\n    });\n\n    return matches.sort((a, b) => b.compatibilityScore - a.compatibilityScore);\n  },\n\n  // Match Management\n  async createMatch(teacherIntentId: string, learnerIntentId: string): Promise<MockMatch> {\n    await delay(1000);\n    \n    const teacherIntent = mockIntents.find(i => i.id === teacherIntentId);\n    const learnerIntent = mockIntents.find(i => i.id === learnerIntentId);\n    \n    if (!teacherIntent || !learnerIntent) {\n      throw new Error('Intent not found');\n    }\n\n    const teacherUser = dummyUsers.find(u => u.id === teacherIntent.userId) || dummyUsers[0];\n    const learnerUser = dummyUsers.find(u => u.id === learnerIntent.userId) || dummyUsers[1];\n\n    const match: MockMatch = {\n      id: generateId(),\n      teacherIntentId,\n      learnerIntentId,\n      teacherUser,\n      learnerUser,\n      skill: teacherIntent.skillName,\n      status: 'accepted',\n      compatibilityScore: calculateCompatibilityScore(teacherIntent, learnerIntent),\n      matchReasons: generateMatchReasons(teacherIntent, learnerIntent, 85),\n      createdAt: new Date().toISOString()\n    };\n\n    mockMatches.push(match);\n    \n    // Update intent statuses\n    teacherIntent.status = 'matched';\n    learnerIntent.status = 'matched';\n\n    return match;\n  },\n\n  async getMatches(userId?: string): Promise<MockMatch[]> {\n    await delay(600);\n    \n    let userMatches = [...mockMatches];\n    \n    if (userId) {\n      userMatches = userMatches.filter(match => \n        match.teacherUser.id === userId || match.learnerUser.id === userId\n      );\n    }\n    \n    return userMatches.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  },\n\n  // Messaging\n  async sendMessage(matchId: string, message: string, encrypted: boolean = false): Promise<MockMessage> {\n    await delay(500);\n    \n    if (!mockCurrentUser) {\n      throw new Error('No wallet connected');\n    }\n\n    const newMessage: MockMessage = {\n      id: generateId(),\n      matchId,\n      senderId: mockCurrentUser.id,\n      message: encrypted ? btoa(message) : message, // Simple base64 \"encryption\"\n      encrypted,\n      timestamp: new Date().toISOString()\n    };\n\n    mockMessages.push(newMessage);\n    return newMessage;\n  },\n\n  async getMessages(matchId: string): Promise<MockMessage[]> {\n    await delay(400);\n    \n    return mockMessages\n      .filter(msg => msg.matchId === matchId)\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n  },\n\n  // Privacy Settings\n  async updatePrivacySettings(settings: Partial<MockUser['privacySettings']>): Promise<MockUser> {\n    await delay(600);\n    \n    if (!mockCurrentUser) {\n      throw new Error('No wallet connected');\n    }\n\n    mockCurrentUser.privacySettings = {\n      ...mockCurrentUser.privacySettings,\n      ...settings\n    };\n\n    return mockCurrentUser;\n  },\n\n  // Utility functions\n  async simulateNetworkDelay(ms: number = 1000): Promise<void> {\n    await delay(ms);\n  }\n};\n\n// Helper functions\nfunction calculateCompatibilityScore(intent1: MockIntent, intent2: MockIntent): number {\n  let score = 0;\n  \n  // Skill name match\n  if (intent1.skillName.toLowerCase() === intent2.skillName.toLowerCase()) {\n    score += 50;\n  } else if (intent1.skillName.toLowerCase().includes(intent2.skillName.toLowerCase()) ||\n             intent2.skillName.toLowerCase().includes(intent1.skillName.toLowerCase())) {\n    score += 30;\n  }\n  \n  // Skill level compatibility\n  const levels = ['beginner', 'intermediate', 'advanced', 'expert'];\n  const level1Index = levels.indexOf(intent1.skillLevel);\n  const level2Index = levels.indexOf(intent2.skillLevel);\n  \n  if (Math.abs(level1Index - level2Index) <= 1) {\n    score += 25;\n  } else if (Math.abs(level1Index - level2Index) <= 2) {\n    score += 15;\n  }\n  \n  // Location compatibility\n  if (intent1.location && intent2.location) {\n    if (intent1.location.toLowerCase() === intent2.location.toLowerCase()) {\n      score += 15;\n    } else if (intent1.location.toLowerCase().includes('remote') || \n               intent2.location.toLowerCase().includes('remote')) {\n      score += 10;\n    }\n  }\n  \n  // Random factor for variety\n  score += Math.floor(Math.random() * 10);\n  \n  return Math.min(score, 100);\n}\n\nfunction generateMatchReasons(intent1: MockIntent, intent2: MockIntent, score: number): string[] {\n  const reasons: string[] = [];\n  \n  if (intent1.skillName.toLowerCase() === intent2.skillName.toLowerCase()) {\n    reasons.push('Exact skill match');\n  } else {\n    reasons.push('Related skill match');\n  }\n  \n  if (intent1.location?.toLowerCase().includes('remote') || \n      intent2.location?.toLowerCase().includes('remote')) {\n    reasons.push('Remote availability');\n  }\n  \n  if (score > 80) {\n    reasons.push('High compatibility score');\n  } else if (score > 60) {\n    reasons.push('Good compatibility score');\n  }\n  \n  const levels = ['beginner', 'intermediate', 'advanced', 'expert'];\n  const level1Index = levels.indexOf(intent1.skillLevel);\n  const level2Index = levels.indexOf(intent2.skillLevel);\n  \n  if (Math.abs(level1Index - level2Index) <= 1) {\n    reasons.push('Compatible skill levels');\n  }\n  \n  return reasons;\n}\n\nexport default mockAnomaService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/WalletConnection.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { mockAnomaService, MockWalletConnection, MockUser } from '@/lib/mockAnomaService';\n\ninterface WalletConnectionProps {\n  onConnectionChange?: (connected: boolean, user?: MockUser) => void;\n}\n\nexport default function WalletConnection({ onConnectionChange }: WalletConnectionProps) {\n  const [wallet, setWallet] = useState<MockWalletConnection | null>(null);\n  const [user, setUser] = useState<MockUser | null>(null);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n    // Check if wallet is already connected\n    const existingWallet = mockAnomaService.getWalletConnection();\n    const existingUser = mockAnomaService.getCurrentUser();\n    \n    if (existingWallet && existingUser) {\n      setWallet(existingWallet);\n      setUser(existingUser);\n      onConnectionChange?.(true, existingUser);\n    }\n  }, [onConnectionChange]);\n\n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n\n    try {\n      const connectedWallet = await mockAnomaService.connectWallet();\n      const currentUser = mockAnomaService.getCurrentUser();\n      \n      setWallet(connectedWallet);\n      setUser(currentUser);\n      onConnectionChange?.(true, currentUser || undefined);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to connect wallet');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const handleDisconnect = async () => {\n    try {\n      await mockAnomaService.disconnectWallet();\n      setWallet(null);\n      setUser(null);\n      onConnectionChange?.(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to disconnect wallet');\n    }\n  };\n\n  if (!mounted) {\n    return null; // Prevent hydration mismatch\n  }\n\n  if (wallet && user) {\n    return (\n      <Card className=\"mystical-card\">\n        <CardHeader>\n          <CardTitle className=\"text-theme-white flex items-center gap-2\">\n            <div className=\"w-3 h-3 bg-theme-green rounded-full animate-pulse\"></div>\n            Wallet Connected\n          </CardTitle>\n          <CardDescription className=\"text-gray-300\">\n            Successfully connected to Anoma network\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"text-sm text-gray-400\">Wallet Address</div>\n            <div className=\"font-mono text-theme-white bg-theme-black/50 p-2 rounded border border-theme-white/20\">\n              {wallet.address.slice(0, 6)}...{wallet.address.slice(-4)}\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <div className=\"text-sm text-gray-400\">Network</div>\n            <div className=\"text-theme-green font-medium\">{wallet.network}</div>\n          </div>\n\n          {user.username && (\n            <div className=\"space-y-2\">\n              <div className=\"text-sm text-gray-400\">Username</div>\n              <div className=\"text-theme-white font-medium\">{user.username}</div>\n            </div>\n          )}\n\n          <div className=\"flex gap-2 pt-4\">\n            <Button \n              onClick={handleDisconnect}\n              className=\"btn-outline flex-1\"\n            >\n              Disconnect\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"mystical-card\">\n      <CardHeader>\n        <CardTitle className=\"text-theme-white\">Connect Your Anoma Wallet</CardTitle>\n        <CardDescription className=\"text-gray-300\">\n          Connect your wallet to access the decentralized skill exchange network\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {error && (\n          <Alert className=\"border-theme-red bg-theme-red/10\">\n            <AlertDescription className=\"text-theme-red\">\n              {error}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        <div className=\"space-y-4\">\n          <div className=\"text-sm text-gray-300\">\n            By connecting your wallet, you'll be able to:\n          </div>\n          <ul className=\"space-y-2 text-sm text-gray-300\">\n            <li className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-theme-green rounded-full\"></div>\n              Post teaching and learning intents\n            </li>\n            <li className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-theme-green rounded-full\"></div>\n              Get matched with compatible peers\n            </li>\n            <li className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-theme-green rounded-full\"></div>\n              Send encrypted messages\n            </li>\n            <li className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-theme-green rounded-full\"></div>\n              Control your privacy settings\n            </li>\n          </ul>\n        </div>\n\n        <Button \n          onClick={handleConnect}\n          disabled={isConnecting}\n          className=\"btn-primary w-full\"\n        >\n          {isConnecting ? (\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-4 h-4 border-2 border-theme-white border-t-transparent rounded-full animate-spin\"></div>\n              Connecting...\n            </div>\n          ) : (\n            'Connect Anoma Wallet'\n          )}\n        </Button>\n\n        <div className=\"text-xs text-gray-400 text-center\">\n          This is a demo using mock wallet functionality. \n          In production, this would connect to your actual Anoma wallet.\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1089, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/onboarding/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport WalletConnection from '@/components/WalletConnection';\nimport { MockUser } from '@/lib/mockAnomaService';\n\nexport default function OnboardingPage() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [user, setUser] = useState<MockUser | null>(null);\n\n  const handleConnectionChange = (connected: boolean, userData?: MockUser) => {\n    setIsConnected(connected);\n    setUser(userData || null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white text-gray-800\">\n      {/* Navigation */}\n      <nav className=\"border-b border-gray-200 bg-white/95 backdrop-blur-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link href=\"/\" className=\"flex items-center\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-8 h-8 bg-red-500 rounded-sm transform rotate-45 flex items-center justify-center\">\n                  <div className=\"w-4 h-4 bg-white rounded-sm transform -rotate-45\"></div>\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">\n                  ANOMA<span className=\"text-red-500\">_</span>SKILLS\n                </h1>\n              </div>\n            </Link>\n            <div className=\"hidden md:block\">\n              <div className=\"ml-10 flex items-baseline space-x-8\">\n                <Link href=\"/\" className=\"text-gray-600 hover:text-red-500 transition-colors font-medium uppercase text-sm tracking-wide\">\n                  Home\n                </Link>\n                <Link href=\"/post-intent\" className=\"text-gray-600 hover:text-red-500 transition-colors font-medium uppercase text-sm tracking-wide\">\n                  Post Intent\n                </Link>\n                <Link href=\"/matches\" className=\"text-gray-600 hover:text-red-500 transition-colors font-medium uppercase text-sm tracking-wide\">\n                  Find Matches\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Header */}\n        <div className=\"text-center mb-12 animate-fade-in\">\n          <h1 className=\"text-4xl md:text-5xl font-black mb-6 tracking-tight\">\n            <span className=\"text-gray-900\">WELCOME TO</span>\n            <br />\n            <span className=\"bg-gradient-to-r from-red-500 to-red-600 bg-clip-text text-transparent\">ANOMA SKILLS</span>\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto font-medium\">\n            Get started with the decentralized skill exchange platform. \n            Connect your wallet and begin your learning journey.\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Wallet Connection */}\n          <div className=\"animate-slide-up\">\n            <WalletConnection onConnectionChange={handleConnectionChange} />\n          </div>\n\n          {/* Getting Started Guide */}\n          <div className=\"animate-slide-up delay-200\">\n            <Card className=\"bg-white border border-gray-200 hover:border-red-500 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 h-full\">\n              <CardHeader>\n                <CardTitle className=\"text-gray-900 font-bold uppercase tracking-wide\">Getting Started</CardTitle>\n                <CardDescription className=\"text-gray-600 font-medium\">\n                  Follow these steps to make the most of the platform\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start gap-3\">\n                    <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                      isConnected ? 'bg-red-500 text-white' : 'bg-red-500 text-white'\n                    }`}>\n                      1\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 mb-1 uppercase text-sm tracking-wide\">Connect Wallet</h3>\n                      <p className=\"text-sm text-gray-600 font-medium\">\n                        Connect your Anoma wallet to access the network\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                      isConnected ? 'bg-white border-2 border-red-500 text-red-500' : 'bg-gray-300 text-gray-600'\n                    }`}>\n                      2\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 mb-1 uppercase text-sm tracking-wide\">Post Your Intent</h3>\n                      <p className=\"text-sm text-gray-600 font-medium\">\n                        Create an intent to teach or learn a specific skill\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"w-8 h-8 rounded-full bg-gray-300 text-gray-600 flex items-center justify-center text-sm font-bold\">\n                      3\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 mb-1 uppercase text-sm tracking-wide\">Get Matched</h3>\n                      <p className=\"text-sm text-gray-600 font-medium\">\n                        Our system will find compatible learning partners\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"w-8 h-8 rounded-full bg-gray-300 text-gray-600 flex items-center justify-center text-sm font-bold\">\n                      4\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 mb-1 uppercase text-sm tracking-wide\">Start Learning</h3>\n                      <p className=\"text-sm text-gray-600 font-medium\">\n                        Connect with matches and begin skill exchange\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                {isConnected && (\n                  <div className=\"pt-4 border-t border-gray-200\">\n                    <div className=\"flex flex-col gap-3\">\n                      <Link href=\"/post-intent\">\n                        <Button className=\"bg-red-500 hover:bg-red-600 text-white font-semibold w-full uppercase tracking-wide\">\n                          Post Your First Intent\n                        </Button>\n                      </Link>\n                      <Link href=\"/matches\">\n                        <Button className=\"bg-white border-2 border-red-500 text-red-500 hover:bg-red-50 font-semibold w-full uppercase tracking-wide\">\n                          Browse Available Skills\n                        </Button>\n                      </Link>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Features Overview */}\n        {isConnected && (\n          <div className=\"mt-16 animate-fade-in\">\n            <h2 className=\"text-3xl font-black text-center mb-12 text-gray-900 tracking-tight uppercase\">\n              Platform Features\n            </h2>\n            \n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <Card className=\"bg-white border border-gray-200 hover:border-red-500 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 hover:-translate-y-1\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-red-500 rounded-lg flex items-center justify-center mb-6 shadow-lg shadow-red-500/25\">\n                    <div className=\"w-8 h-8 border-2 border-white rounded transform rotate-45\"></div>\n                  </div>\n                  <CardTitle className=\"text-gray-900 text-lg font-bold uppercase tracking-wide\">\n                    Intent Matching\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <CardDescription className=\"text-gray-600 font-medium\">\n                    Advanced algorithm matches teaching and learning intents based on skills, \n                    availability, and compatibility scores.\n                  </CardDescription>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white border border-gray-200 hover:border-red-500 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 hover:-translate-y-1\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-red-500 rounded-lg flex items-center justify-center mb-6 shadow-lg shadow-red-500/25\">\n                    <div className=\"w-8 h-8 border-2 border-white rounded-sm\"></div>\n                  </div>\n                  <CardTitle className=\"text-gray-900 text-lg font-bold uppercase tracking-wide\">\n                    Privacy Control\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <CardDescription className=\"text-gray-600 font-medium\">\n                    Granular privacy settings let you control what information \n                    you share and with whom.\n                  </CardDescription>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white border border-gray-200 hover:border-red-500 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 hover:-translate-y-1\">\n                <CardHeader>\n                  <div className=\"w-16 h-16 bg-red-500 rounded-lg flex items-center justify-center mb-6 shadow-lg shadow-red-500/25\">\n                    <div className=\"w-8 h-8 border-2 border-white rounded-full\"></div>\n                  </div>\n                  <CardTitle className=\"text-gray-900 text-lg font-bold uppercase tracking-wide\">\n                    Secure Messaging\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <CardDescription className=\"text-gray-600 font-medium\">\n                    End-to-end encrypted messaging ensures your conversations \n                    remain private and secure.\n                  </CardDescription>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        )}\n\n        {/* Welcome Message for Connected Users */}\n        {isConnected && user && (\n          <div className=\"mt-16 text-center animate-scale-in\">\n            <Card className=\"bg-white border border-gray-200 hover:border-red-500 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 max-w-2xl mx-auto\">\n              <CardContent className=\"pt-6\">\n                <div className=\"text-4xl mb-4\">🎉</div>\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-2 uppercase tracking-wide\">\n                  Welcome, {user.username || 'Anoma User'}!\n                </h3>\n                <p className=\"text-gray-600 mb-6 font-medium\">\n                  Your wallet is connected and you're ready to start your skill exchange journey. \n                  What would you like to do first?\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                  <Link href=\"/post-intent\">\n                    <Button className=\"bg-red-500 hover:bg-red-600 text-white font-semibold uppercase tracking-wide\">\n                      Create Intent\n                    </Button>\n                  </Link>\n                  <Link href=\"/matches\">\n                    <Button className=\"bg-white border-2 border-red-500 text-red-500 hover:bg-red-50 font-semibold uppercase tracking-wide\">\n                      Find Skills\n                    </Button>\n                  </Link>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Call to Action for Non-Connected Users */}\n        {!isConnected && (\n          <div className=\"mt-16 text-center animate-fade-in\">\n            <Card className=\"bg-white border border-gray-200 hover:border-red-500 hover:shadow-lg hover:shadow-red-500/10 transition-all duration-300 max-w-2xl mx-auto\">\n              <CardContent className=\"pt-6\">\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-4 uppercase tracking-wide\">\n                  Ready to Get Started?\n                </h3>\n                <p className=\"text-gray-600 mb-6 font-medium\">\n                  Connect your Anoma wallet above to unlock the full potential of \n                  decentralized skill exchange.\n                </p>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-red-500 mb-1\">500+</div>\n                    <div className=\"text-gray-600 font-semibold uppercase tracking-wide\">Active Teachers</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-red-500 mb-1\">1000+</div>\n                    <div className=\"text-gray-600 font-semibold uppercase tracking-wide\">Skills Available</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}